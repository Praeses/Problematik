[gd_scene load_steps=4 format=3 uid="uid://c44c03bwqrurx"]

[sub_resource type="GDScript" id="GDScript_4tbrl"]
script/source = "extends Node3D
class_name Laser

@onready var _mesh := $MeshInstance3D

var source: Node3D
var destination: Node3D

signal pulsed(value: bool)


func set_source(source: Node3D):
	if source.owner is Connector:
		self.source = source
		source.owner.pulsed.connect(_on_pulsed)
		print(\"[Laser] - Source pulsed signal connected to Laser\")
	else:
		print(\"[Laser] - Source not a Connector, skipping\")


func remove_source():
	source.owner.pulsed.disconnect(_on_pulsed)
	source = null


func set_destination(destination: Node3D):
	if destination.owner is Connector:
		self.destination = destination
		pulsed.connect(self.destination.owner._on_pulsed)
		print(\"[Laser] - Laser pulsed signal connected to Destination\")
	else:
		print(\"[Laser] - Destination not a Connector, skipping\")


func remove_destination():
	destination = null
	pulsed.disconnect(destination.owner._on_pulsed)


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if source:
		global_position = source.global_position
		print(\"Laser Source: \" + str(position))
	
	if destination:
		print(\"Laser Destination: \" + str(destination.global_position))
		look_at(destination.global_position)
		var distance = source.global_position.distance_to(destination.global_position)
		_mesh.mesh.height = distance
		var direction = source.global_position.direction_to(destination.global_position)
		
		_mesh.position.z = -distance/2
	pass


func _on_pulsed(value: bool):
	pulsed.emit(value)
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_e0kmp"]
transparency = 1
albedo_color = Color(1, 1, 0.427451, 0.356863)
emission_enabled = true
emission = Color(0.886275, 0.886275, 0.611765, 1)

[sub_resource type="CylinderMesh" id="CylinderMesh_6qfmm"]
material = SubResource("StandardMaterial3D_e0kmp")
top_radius = 0.05
bottom_radius = 0.05
height = 0.01
radial_segments = 16
rings = 1

[node name="Laser" type="Node3D"]
script = SubResource("GDScript_4tbrl")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0)
mesh = SubResource("CylinderMesh_6qfmm")
